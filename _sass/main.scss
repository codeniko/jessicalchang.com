@charset "utf-8";

// Define defaults for each variable.
$max-page-width: 1440px;

$base-font-weight: 400 !default;
$background-color: #fff !default;

$on-mobile:        480px !default;
$on-tablet:        840px !default;
$on-desktop:       1200px !default;

$dark-text-color:  #414343 !default;
$light-text-color: #fbfbfb;

$accent-color: #3d96ec;
$darker-accent-color: #296cac;

$button-color: $light-text-color;
$button-hover-color: $button-color;
$button-hover-bg-color: $darker-accent-color;
$button-active-color: $accent-color;
$button-active-bg-color: #fbfbfb;

$anchor-color: $accent-color;
$anchor-hover-color: $darker-accent-color;
$anchor-active-color: $darker-accent-color;

@mixin media-query($device) {
  @media screen and (max-width: $device) {
    @content;
  }
}

@mixin raleway-font($weight: 400) {
  font-family: 'Raleway', sans-serif;
  font-weight: $weight;
}

@mixin lato-font($weight: 400) {
  font-family: 'Lato', sans-serif;
  font-weight: $weight;
}

@mixin mont-font($weight: 400) {
  font-family: 'Montserrat', sans-serif;
  font-weight: $weight;
}

// set all pseudo states for anchor tag to specified color
// DEFAULT: $dark-text-color to blend with page text
@mixin anchor-color($color: $dark-text-color, $fill: $color) {
    color: $color;
    svg > path { fill: $fill; }
    svg > g { stroke: $color; }

    &:visited {
      color: $color;
      svg > path { fill: $fill; }
      svg > g { stroke: $color; }
    }

    &:hover, &:active {
      color: $color;
      svg > path { fill: $fill; }
      svg > g { stroke: $color; }
    }
}

// responsive background image that maintains height/width ratio
// ratio = height/width ratio of image
@mixin bg-image($url, $ratio, $max-width: null, $max-height: null) {
  @if $max-width { max-width: $max-width; }
  @if $max-height { max-height: $max-height; }

  width: 100%;
  background: url($url) no-repeat;
  background-size: contain;
  background-position: center;
  position: relative;

  .padding {
    height: 0px;
    display: block;
    padding-top: $ratio;
  }
}

// fixed size background image
@mixin bg-image-fixed($url, $width, $height) {
  width: $width;
  height: $height;
  background: url($url) no-repeat;
  background-size: contain;
  background-position: center;
  position: relative;
}

// default alpha 0.51 for things overlaying over components
@function overlay-value($alpha: 0.51) {
  @return rgba(65, 67, 67, $alpha)
}

// Import partials.
@import
  "main/base",
  "main/layout",
  "main/spinner",
  "main/index",
  "main/contact",
  "main/about",
  "main/projects"
;
